"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.setupKindeMock = exports.getMockAuthURL = exports.mockClientConfig = void 0;
const index_1 = require("./index");
const express_1 = __importDefault(require("express"));
exports.mockClientConfig = {
    clientId: 'mockclientid',
    secret: 'mockclientsecret',
    grantType: index_1.GrantType.AUTHORIZATION_CODE,
    issuerBaseUrl: 'https://mockdomain.kinde.com',
    siteUrl: 'https://mockapp.com',
    unAuthorisedUrl: 'https://mockapp.com/unauthorised',
    redirectUrl: 'https://mockapp.com/kinde_callback',
    postLogoutRedirectUrl: 'https://mockapp.com',
    scope: 'openid profile email',
};
const getMockAuthURL = (paramOverrides = {}) => {
    const authURL = new URL(`${exports.mockClientConfig.issuerBaseUrl}/oauth2/auth`);
    const authURLSearchParams = new URLSearchParams({
        client_id: exports.mockClientConfig.clientId,
        scope: exports.mockClientConfig.scope,
        redirect_uri: exports.mockClientConfig.redirectUrl,
        response_type: 'code',
        state: 'ec780ca2734867827259c63d24774eb5e557ebd695d00ce2d434fddc',
        ...paramOverrides,
    });
    authURL.search = authURLSearchParams.toString();
    return authURL;
};
exports.getMockAuthURL = getMockAuthURL;
const setupKindeMock = (configOverrides = {}) => {
    const app = (0, express_1.default)();
    const config = { ...exports.mockClientConfig, ...configOverrides };
    (0, index_1.setupKinde)(config, app);
    return app;
};
exports.setupKindeMock = setupKindeMock;
